import React from 'react'
import PropTypes from 'prop-types'

const RiddlePollIcons = ({
  kind,
  width = 21,
  height = 14,
  bgColor = '#FFF'
}) => {
  const viewBox = `0 0 ${width} ${height}`

  let path
  switch (kind) {
    case 'riddles':
      path = (
        <path
          d='M4.0832 6.0672H1.0208C0.459359 6.0672 0 5.60784 0 5.0464C0 4.48496 0.459359 4.0256 1.0208 4.0256H4.0832C4.64463 4.0256 5.10399 4.48496 5.10399 5.0464C5.10399 5.60784 4.64463 6.0672 4.0832 6.0672ZM4.0832 9.12959H1.0208C0.459359 9.12959 0 9.58895 0 10.1504C0 10.7118 0.459359 11.1712 1.0208 11.1712H4.0832C4.64463 11.1712 5.10399 10.7118 5.10399 10.1504C5.10399 9.58895 4.64463 9.12959 4.0832 9.12959ZM18.2519 15.5504L15.067 12.3655C14.1891 12.9372 13.1377 13.2638 12.0046 13.2026C9.5853 13.0903 7.51308 11.2018 7.18642 8.80294C7.07862 8.00562 7.16033 7.19412 7.42494 6.43431C7.68954 5.6745 8.12958 4.98778 8.70933 4.42991C9.28908 3.87204 9.99221 3.45873 10.7616 3.22353C11.5311 2.98833 12.3451 2.93788 13.1377 3.07626C15.1282 3.41312 16.7819 4.96474 17.2209 6.93488C17.5577 8.42524 17.2311 9.81353 16.5063 10.916L19.7014 14.1111C20.0995 14.5092 20.0995 15.1523 19.7014 15.5504C19.3033 15.9485 18.65 15.9485 18.2519 15.5504ZM15.312 8.1088C15.312 6.42448 13.9339 5.0464 12.2496 5.0464C10.5653 5.0464 9.18719 6.42448 9.18719 8.1088C9.18719 9.79311 10.5653 11.1712 12.2496 11.1712C13.9339 11.1712 15.312 9.79311 15.312 8.1088ZM1.0208 16.2752H9.18719C9.74863 16.2752 10.208 15.8158 10.208 15.2544C10.208 14.6929 9.74863 14.2336 9.18719 14.2336H1.0208C0.459359 14.2336 0 14.6929 0 15.2544C0 15.8158 0.459359 16.2752 1.0208 16.2752Z'
          fill={bgColor}
        />
      )
      break
    case 'poll':
      path = (
        <path
          d='M6.66667 14.4444C6.66667 15.0581 6.16921 15.5556 5.55556 15.5556C4.94191 15.5556 4.44444 15.0581 4.44444 14.4444V8.88889C4.44444 8.27524 4.94191 7.77778 5.55556 7.77778C6.16921 7.77778 6.66667 8.27524 6.66667 8.88889V14.4444ZM11.1111 14.4444C11.1111 15.0581 10.6136 15.5556 10 15.5556C9.38635 15.5556 8.88889 15.0581 8.88889 14.4444V5.55555C8.88889 4.94191 9.38635 4.44444 10 4.44444C10.6136 4.44444 11.1111 4.94191 11.1111 5.55556V14.4444ZM15.5556 14.4444C15.5556 15.0581 15.0581 15.5556 14.4444 15.5556C13.8308 15.5556 13.3333 15.0581 13.3333 14.4444V12.2222C13.3333 11.6086 13.8308 11.1111 14.4444 11.1111C15.0581 11.1111 15.5556 11.6086 15.5556 12.2222V14.4444ZM17.7778 17.7778H2.22222V2.22222H17.7778V17.8889M17.7778 0H2.22222C1 0 0 1 0 2.22222V17.7778C0 19 1 20 2.22222 20H17.7778C19 20 20 19 20 17.7778V2.22222C20 1 19 0 17.7778 0Z'
          fill={bgColor}
        />
      )
      break
    case 'SlideArrowRight':
      path = (
        <path
          d='M1.24186 2.34901C1.1646 2.27268 1.1042 2.18288 1.06411 2.08476C1.02402 1.98663 1.00503 1.8821 1.00821 1.77712C1.01139 1.67214 1.03668 1.56877 1.08265 1.47292C1.12862 1.37706 1.19436 1.2906 1.27611 1.21847C1.35787 1.14634 1.45404 1.08995 1.55914 1.05252C1.66424 1.01509 1.7762 0.99735 1.88864 1.00032C2.00108 1.00329 2.1118 1.02691 2.21446 1.06983C2.31712 1.11274 2.40973 1.17412 2.48699 1.25045L9.76592 8.44623C9.91624 8.59468 10 8.79122 10 8.99551C10 9.1998 9.91624 9.39634 9.76592 9.54478L2.48699 16.7414C2.41024 16.8194 2.31765 16.8824 2.21461 16.9267C2.11157 16.971 2.00013 16.9957 1.88675 16.9995C1.77338 17.0033 1.66033 16.9859 1.55418 16.9486C1.44803 16.9112 1.35089 16.8545 1.26841 16.7818C1.18593 16.7091 1.11974 16.6218 1.0737 16.525C1.02765 16.4282 1.00267 16.3238 1.0002 16.2179C0.997733 16.112 1.01782 16.0067 1.05931 15.9081C1.10079 15.8095 1.16284 15.7196 1.24186 15.6436L7.96589 8.99551L1.24186 2.34901Z'
          fill='white'
          stroke='white'
        />
      )
      break
    case 'SlideArrowLeft':
      path = (
        <path
          d='M9.75814 2.34901C9.8354 2.27268 9.8958 2.18288 9.93589 2.08476C9.97598 1.98663 9.99497 1.8821 9.99179 1.77712C9.98861 1.67214 9.96332 1.56877 9.91735 1.47292C9.87138 1.37706 9.80564 1.2906 9.72389 1.21847C9.64213 1.14634 9.54596 1.08995 9.44086 1.05252C9.33576 1.01509 9.2238 0.99735 9.11136 1.00032C8.99892 1.00329 8.8882 1.02691 8.78554 1.06983C8.68288 1.11274 8.59027 1.17412 8.51301 1.25045L1.23408 8.44623C1.08376 8.59468 1 8.79122 1 8.99551C1 9.1998 1.08376 9.39634 1.23408 9.54478L8.51301 16.7414C8.58976 16.8194 8.68235 16.8824 8.78539 16.9267C8.88843 16.971 8.99987 16.9957 9.11325 16.9995C9.22662 17.0033 9.33967 16.9859 9.44582 16.9486C9.55197 16.9112 9.64911 16.8545 9.73159 16.7818C9.81407 16.7091 9.88026 16.6218 9.9263 16.525C9.97235 16.4282 9.99733 16.3238 9.9998 16.2179C10.0023 16.112 9.98218 16.0067 9.94069 15.9081C9.89921 15.8095 9.83716 15.7196 9.75814 15.6436L3.03411 8.99551L9.75814 2.34901Z'
          fill='white'
          stroke='white'
        />
      )
      break
    default:
      path = undefined
  }

  return (
    <svg
      width={width}
      height={height}
      viewBox={viewBox}
      fill={bgColor}
      xmlns='http://www.w3.org/2000/svg'
    >
      {path}
    </svg>
  )
}

RiddlePollIcons.propTypes = {
  kind: PropTypes.string.isRequired,
  width: PropTypes.number,
  height: PropTypes.number,
  bgColor: PropTypes.string
}

export default RiddlePollIcons
